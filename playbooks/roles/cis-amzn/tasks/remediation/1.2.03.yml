---

- name: Set check facts
  set_fact:
    cis_code: &cis_code '1.2.3'
    cis_name: &cis_name Ensure gpgcheck is globally activated
    cis_profile: &cis_profile level-1
    cis_scored: &cis_scored scored
    cis_section: &cis_section section-1
  tags:
    - always

- name: CIS {{ cis_code }} - {{ cis_name }}
  block:

  - name: "APPLY | {{ cis_code }} - get repos"
    find:
      paths:
        - /etc/yum.repos.d
      follow: yes
      get_checksum: true
      hidden: true
      patterns:
        - '*.repo'
      recurse: false
      file_type: file
    register: cis_apply_tmp_repos
    tags:
      - apply

  - name: "APPLY | {{ cis_code }} - update repos"
    lineinfile:
      path: "{{ item.path }}"
      regexp: '^(\s*gpgcheck\s*)[=]+\s*\S+\s*$'
      line: '\1=1'
      state: present
      backup: 'no'
      backrefs: 'yes'
      create: 'no'
      # Scan till the end
      firstmatch: 'no'
      # No validation available for repos
      validate: '/bin/env true %s'
    with_items: "{{ cis_apply_tmp_repos.files }}"
    register: cis_apply_tmp_files
    tags:
      - apply

  - name: "APPLY | {{ cis_code }} - update confs"
    lineinfile:
      path: "{{ item }}"
      regexp: '^(\s*gpgcheck\s*)[=]+\s*\S+\s*$'
      line: '\1=1'
      state: present
      backup: 'no'
      backrefs: 'yes'
      create: 'no'
      # Scan till the end
      firstmatch: 'no'
      # No validation available for confs
      validate: '/bin/env true %s'
    with_items:
      - /etc/yum.conf
    register: cis_apply_tmp_confs
    tags:
      - apply

  - name: "APPLY | {{ cis_code }} - set apply fact."
    set_fact:
      "cis_{{ cis_code | regex_replace('[.]','_') }}_apply":
        repos: "{{ cis_apply_tmp_repos }}"
        files: "{{ cis_apply_tmp_files }}"
        confs: "{{ cis_apply_tmp_confs }}"
      cis_apply_tmp:
      cis_apply_tmp_files:
      cis_apply_tmp_repos:
      cis_apply_tmp_confs:
    tags:
      - apply

  # TODO: POST
   
    
  tags:
    - *cis_profile
    - *cis_section
    - *cis_code
    - *cis_scored

...
