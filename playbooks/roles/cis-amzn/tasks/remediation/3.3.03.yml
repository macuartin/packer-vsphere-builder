---

- name: Set check facts
  set_fact:
    cis_code: &cis_code '3.3.3'
    cis_name: &cis_name Ensure IPv6 is disabled
    cis_profile: &cis_profile level-1
    cis_scored: &cis_scored not_scored
    cis_section: &cis_section section-3
  tags:
    - always

- name: CIS {{ cis_code }} - {{ cis_name }}
  block:

  - name: "APPLY | {{ cis_code }} - gather kernel lines"
    shell:
      grep -E '{{ grub_kernel }}' {{ grub_menu }}
    register: cis_apply_tmp_lines
    failed_when: >-
      cis_apply_tmp_lines.rc!=0 or
      cis_apply_tmp_lines.stderr|length>0 or
      cis_apply_tmp_lines.stdout|length<=0
    tags:
      - apply

  # https://www.regular-expressions.info/lookaround.html
  - name: "APPLY | {{ cis_code }} - update kernel options."
    replace:
      path: "{{ grub_menu }}"
      regexp: "{{ item }}"
      replace: '\1ipv6.disable=1\3'
      backup: 'no'
    with_items:
      - '({{ grub_kernel }}.*\s+)(ipv6.disable=\S+)(\s+.+$)'
      - '({{ grub_kernel }}.*\s+)(ipv6.disable=\S+)(\s+$)'
      - '({{ grub_kernel }}.*\s+)(ipv6.disable=\S+)($)'
    register: cis_apply_tmp_update
    tags:
      - apply

  # Add an option to the end of kernel string
  - name: "APPLY | {{ cis_code }} - insert kernel options."
    replace:
      path: "{{ grub_menu }}"
      regexp: '({{ grub_kernel }}((?!ipv6.disable=\S+).)*)$'
      replace: '\1 ipv6.disable=1'
      backup: 'no'
    register: cis_apply_tmp_insert
    tags:
      - apply

  - import_tasks: ../commons/reboot-machine.yml
    vars:
      cis_code: *cis_code

  - name: "APPLY | {{ cis_code }} - set apply fact."
    set_fact: 
      "cis_{{ cis_code | regex_replace('[.]','_') }}_apply":
        lines: "{{ cis_apply_tmp_lines }}"
        update: "{{ cis_apply_tmp_update }}"
        insert: "{{ cis_apply_tmp_insert }}"
        #reboot: "{{ cis_reboot_tmp }}"
      cis_apply_tmp_lines:
      cis_apply_tmp_update:
      cis_apply_tmp_insert:
    tags:
      - apply

  # TODO: check dmesg for actual kernel config

  - name: "POST | {{ cis_code }} - gather kernel lines"
    shell:
      grep -E '{{ grub_kernel }}' {{ grub_menu }}
    register: cis_post_tmp
    failed_when: >-
      cis_post_tmp.rc!=0 or
      cis_post_tmp.stderr|length>0 or
      cis_post_tmp.stdout|length<=0
    tags:
      - post

  - name: "POST | {{ cis_code }} - process kernel lines"
    debug:
      var: item
    failed_when: not (item is search('ipv6.disable=1'))
    with_items: "{{ cis_post_tmp.stdout_lines }}"
    tags:
      - post

  - name: "POST | {{ cis_code }} - set post fact."
    set_fact: 
      "cis_{{ cis_code | regex_replace('[.]','_') }}_post": "{{ cis_post_tmp }}"
      cis_post_tmp:
    tags:
      - post

  - name: "POST | {{ cis_code }} - print post fact."
    debug:
      var: "cis_{{ cis_code | regex_replace('[.]','_') }}_post"
    tags:
      - post
      - debug

  tags:
    - *cis_profile
    - *cis_section
    - *cis_code
    - *cis_scored

...
